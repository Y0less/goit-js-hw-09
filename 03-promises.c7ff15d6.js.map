{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAI,CAAEN,WAAUC,UAEhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,KA9BM,CACXQ,KAAMC,SAASC,cAAc,WAK1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,IAMuBC,EAAnBF,EAAMG,cALRC,SACWhB,EADHc,EACNd,MAASiB,MACDC,EADaJ,EACrBI,KAAQD,MACEE,EADSL,EACnBK,OAAUF,OAoBhB,SAA0BjB,EAAOkB,EAAMC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BtB,EAAcsB,EAAI,EAAGC,SAASrB,GAASoB,EAAIC,SAASH,IACjDI,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALvB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAANH,EAAM,OAC3DI,QAAMC,IAAI,uBAAwCF,OAAf5B,EAAS,QAAY4B,OAANH,EAAM,M,IAE3DM,OAAM,SAAAP,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALvB,MAClBJ,EAAA6B,OAAOM,QAAQ,sBAAuCJ,OAAf5B,EAAS,QAAY4B,OAANH,EAAM,OAC1DI,QAAMC,IAAI,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAANH,EAAM,M,IAzB7DQ,CAAiBhC,EAAOkB,EAAMC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\n// console.log('refs.form :>> ', refs.form);\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: {\n      delay: { value: delay },\n      step: { value: step },\n      amount: { value: amount },\n    },\n  } = event.currentTarget;\n  // event.currentTarget.reset();\n  generatePromises(delay, step, amount);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction generatePromises(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, parseInt(delay) + i * parseInt(step))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","value","step","amount","i","parseInt","then","param","_$delay","Notify","success","concat","console","log","catch","failure","$ce04d3a99e08e73b$var$generatePromises"],"version":3,"file":"03-promises.c7ff15d6.js.map"}